#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 TAB>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R                   &kp T                                                   &kp Y                   &kp U  &lt 5 I    &kp O    &kp P
&kp A           &kp S         &kp D         &kp F                   &kp G        &kp LS(LG(S))      &kp MINUS               &kp H                   &kp J  &kp K      &kp L    &kp ENTER
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C                   &kp V        &kp B              &kp SEMICOLON           &kp N                   &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 3 LANG2  &lt 2 SPACE  &mkp MB1           &lt_to_layer_0 1 SPACE  &lt_to_layer_0 2 LANG1                             &kp INTERNATIONAL_1
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&kp TAB     &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans      &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans      &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2     &kp NUMBER_3     &kp NUMBER_4  &kp NUMBER_5                                          &kp CARET        &kp MINUS        &kp EQUAL         &kp INTERNATIONAL_3  &kp DELETE
&kp NUMBER_6      &kp N7           &kp NUMBER_8     &kp NUMBER_9  &kp NUMBER_0  &kp LC(LA(KP_NUMBER_0))      &kp MINUS  &kp EXCLAMATION  &kp AT_SIGN      &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp BACKSLASH
&kp LEFT_SHIFT    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp LG(C)     &kp LG(V)     &kp EQUAL                    &trans     &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp SEMICOLON     &kp APOS             &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_GUI     &kp LEFT_ALT     &trans        &trans        &trans                       &trans     &trans                                                                   &kp INTERNATIONAL_1
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &kp LC(PAGE_UP)         &kp LC(T)     &kp LC(PAGE_DOWN)  &kp LC(W)                             &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp DELETE
&kp TAB           &kp LEFT_ARROW          &kp LA(TAB)   &kp RIGHT_ARROW    &kp LG(LC(HOME))  &trans      &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT    &kp LG(LS(LEFT_ARROW))  &trans        &kp LC(C)          &kp LC(V)         &trans      &trans  &trans         &trans          &trans          &trans           &trans
&kp LEFT_CONTROL  &kp LEFT_GUI            &kp LEFT_ALT  &trans             &trans            &trans      &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans       &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&bootloader  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans       &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
